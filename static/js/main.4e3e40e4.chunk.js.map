{"version":3,"sources":["constants/index.js","components/list-item/index.js","components/sidebar/sidebar.js","App.js","serviceWorker.js","index.js"],"names":["routes","to","text","children","ListItem","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","showChildren","toggleChildren","bind","assertThisInitialized","setState","xhtml","route","react_default","a","createElement","className","concat","_this$props","level","length","map","child","index","key","_this$props2","Fragment","onClick","renderArrow","renderChildren","Component","defaultProps","defaultStyles","sidebar","zIndex","position","top","bottom","transition","WebkitTransition","willChange","overflowY","left","minWidth","maxWidth","transform","open","Sidebar","_ref","isOpen","style","assign","list_item","App","openSidebar","toggleSidebar","cursor","marginLeft","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.4e3e40e4.chunk.js","sourcesContent":["export const routes = [\r\n  {\r\n    to: \"/\",\r\n    text: \"Dashboard\"\r\n  },\r\n  {\r\n    to: \"/don-hang\",\r\n    text: \"Đơn hàng\",\r\n    children: [\r\n      {\r\n        to: \"/doi-xuat-don-hang\",\r\n        text: \"Đối xuất đơn hàng\",\r\n      },\r\n      {\r\n        to: \"/xuat-ky-thanh-toan\",\r\n        text: \"Xuất kỳ thanh toán\",\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    to: \"/commision\",\r\n    text: \"Commision\"\r\n  },\r\n];\r\n","import React, { Component } from \"react\";\r\n\r\nclass ListItem extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      showChildren: false\r\n    };\r\n    this.toggleChildren = this.toggleChildren.bind(this);\r\n  }\r\n\r\n  toggleChildren() {\r\n    this.setState({\r\n      showChildren: !this.state.showChildren\r\n    });\r\n  }\r\n\r\n  renderArrow() {\r\n    const { showChildren } = this.state;\r\n    const { route } = this.props;\r\n    let xhtml = null;\r\n    if (route.children) {\r\n      xhtml = (\r\n        <i\r\n          className={`fas fa-angle-right list-item__icon-arrow ${\r\n            showChildren ? \"list-item__icon-rotate-90\" : \"\"\r\n          }`}\r\n        />\r\n      );\r\n    }\r\n    return xhtml;\r\n  }\r\n\r\n  renderChildren() {\r\n    const { route, level } = this.props;\r\n    let xhtml = null;\r\n    if (route && route.children && route.children.length > 0) {\r\n      xhtml = route.children.map((child, index) => {\r\n        return <ListItem route={child} key={index} level={level + 1} />;\r\n      });\r\n    }\r\n    return xhtml;\r\n  }\r\n\r\n  render() {\r\n    const { showChildren } = this.state;\r\n    const { route, level } = this.props;\r\n    return (\r\n      <>\r\n        <div\r\n          className={`list-item list-item__level-${level} ${\r\n            showChildren ? \"list-item__show-children\" : \"\"\r\n          }`}\r\n          onClick={this.toggleChildren}\r\n        >\r\n          <span>{route.text}</span>\r\n          {this.renderArrow()}\r\n        </div>\r\n        <div\r\n          className={`list-item__wrapper-list-children ${\r\n            showChildren ? \"list-item__wrapper-list-children-show-children\" : \"\"\r\n          }`}\r\n        >\r\n          {this.renderChildren()}\r\n        </div>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nListItem.propTypes = {};\r\n\r\nListItem.defaultProps = {\r\n  level: 1\r\n};\r\n\r\nexport default ListItem;\r\n","import React from \"react\";\r\nimport { routes } from \"./../../constants\";\r\nimport ListItem from \"../list-item\";\r\n\r\nconst defaultStyles = {\r\n  sidebar: {\r\n    zIndex: 2,\r\n    position: \"absolute\",\r\n    top: 0,\r\n    bottom: 0,\r\n    transition: \"transform .3s ease-out\",\r\n    WebkitTransition: \"-webkit-transform .3s ease-out\",\r\n    willChange: \"transform\",\r\n    overflowY: \"auto\",\r\n    left: 0,\r\n    minWidth: 240,\r\n    maxWidth: 240,\r\n    transform: \"translateX(-100%)\"\r\n  },\r\n  open: {\r\n    transform: \"translateX(0%)\"\r\n  }\r\n};\r\n\r\nfunction Sidebar({ isOpen }) {\r\n  function renderListMenu() {\r\n    let xhtml = null;\r\n    xhtml = routes.map((route, index) => {\r\n      return <ListItem route={route} key={index} />;\r\n    });\r\n    return xhtml;\r\n  }\r\n\r\n  return (\r\n    <div\r\n      className=\"sidebar\"\r\n      style={Object.assign(\r\n        {},\r\n        defaultStyles.sidebar,\r\n        isOpen ? defaultStyles.open : null\r\n      )}\r\n    >\r\n      {renderListMenu()}\r\n    </div>\r\n  );\r\n}\r\n\r\nSidebar.propTypes = {};\r\n\r\nexport default Sidebar;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Sidebar from \"./components/sidebar/sidebar\";\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openSidebar: true\n    };\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n  }\n\n  toggleSidebar() {\n    this.setState({\n      openSidebar: !this.state.openSidebar\n    });\n  }\n\n  render() {\n    const { openSidebar } = this.state;\n    return (\n      <div className=\"App\">\n        <Sidebar isOpen={openSidebar} />\n        <div className={`content ${openSidebar ? \"\" : \"remove-left\"}`}>\n          <span className=\"fas fa-th\" style={{ cursor: \"pointer\" }} onClick={this.toggleSidebar} />\n          <span style={{ marginLeft: 10 }}>Content</span>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}